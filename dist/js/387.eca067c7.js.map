{"version":3,"file":"js/387.eca067c7.js","mappings":"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","sources":["webpack://manhua/./src/views/Classify.vue?ccbe","webpack://manhua/src/views/Classify.vue","webpack://manhua/./src/views/Classify.vue?3269","webpack://manhua/./src/views/Classify.vue","webpack://manhua/./src/utils/errorCode.js","webpack://manhua/./src/https/http.js","webpack://manhua/./src/api/comics.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"classify\"},[_c('div',{staticClass:\"classify-top\"},_vm._l((_vm.classifys),function(items,index){return _c('div',{key:index,staticClass:\"classify-top-list\",class:items.type},[_c('div',{staticClass:\"classify-top-list-item a1\"},[_vm._v(\" \"+_vm._s(index === 0 ? \"题材\" : \"\")+_vm._s(index === 1 ? \"地区\" : \"\")+_vm._s(index === 2 ? \"进度\" : \"\")+_vm._s(index === 3 ? \"排序\" : \"\")+_vm._s(index === 4 ? \"收费\" : \"\")+\" \")]),_vm._l((items.list),function(item,i){return _c('div',{key:i,staticClass:\"classify-top-list-item\",class:{ active: i === 0 },on:{\"click\":function($event){return _vm.activeCondition(items.type, item.id, '', $event)}}},[_vm._v(\" \"+_vm._s(item.name)+\" \")])})],2)}),0),_c('div',{staticClass:\"classify-result\"},[_c('comicList',{attrs:{\"list\":_vm.classifyResult},on:{\"update:list\":function($event){_vm.classifyResult=$event}}})],1),_c('div',{staticClass:\"empty\"},[(_vm.classifyResult.length == 0)?_c('el-empty',{attrs:{\"description\":\"暂无数据\"}}):_vm._e()],1),_c('pagination',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.total > 0),expression:\"total > 0\"}],attrs:{\"align\":\"center\",\"total\":_vm.total,\"page\":_vm.queryParams.pageNum,\"limit\":_vm.queryParams.pageSize},on:{\"update:page\":function($event){return _vm.$set(_vm.queryParams, \"pageNum\", $event)},\"update:limit\":function($event){return _vm.$set(_vm.queryParams, \"pageSize\", $event)},\"pagination\":_vm.getClassPage}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"classify\">\r\n    <div class=\"classify-top\">\r\n      <div\r\n        class=\"classify-top-list\"\r\n        v-for=\"(items, index) in classifys\"\r\n        :key=\"index\"\r\n        :class=\"items.type\"\r\n      >\r\n        <div class=\"classify-top-list-item a1\">\r\n          {{ index === 0 ? \"题材\" : \"\" }}{{ index === 1 ? \"地区\" : \"\"\r\n          }}{{ index === 2 ? \"进度\" : \"\" }}{{ index === 3 ? \"排序\" : \"\"\r\n          }}{{ index === 4 ? \"收费\" : \"\" }}\r\n        </div>\r\n        <div\r\n          class=\"classify-top-list-item\"\r\n          v-for=\"(item, i) in items.list\"\r\n          :key=\"i\"\r\n          @click=\"activeCondition(items.type, item.id, '', $event)\"\r\n          :class=\"{ active: i === 0 }\"\r\n        >\r\n          {{ item.name }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"classify-result\">\r\n      <comicList :list.sync=\"classifyResult\"></comicList>\r\n    </div>\r\n    <div class=\"empty\">\r\n      <el-empty\r\n        v-if=\"classifyResult.length == 0\"\r\n        description=\"暂无数据\"\r\n      ></el-empty>\r\n    </div>\r\n    <pagination\r\n      align=\"center\"\r\n      v-show=\"total > 0\"\r\n      :total=\"total\"\r\n      :page.sync=\"queryParams.pageNum\"\r\n      :limit.sync=\"queryParams.pageSize\"\r\n      @pagination=\"getClassPage\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ClassPage, getClassify } from \"@/api/comics\";\r\nexport default {\r\n  name: \"classify\",\r\n  data() {\r\n    return {\r\n      classifys: [],\r\n      xuan: [],\r\n      classifyResult: [],\r\n      pageSize: 39,\r\n      total: 100,\r\n      classifyslist: [],\r\n      queryParams: {\r\n        styleId: \"\",\r\n        areaId: \"\",\r\n        isFinish: \"\",\r\n        order: \"\",\r\n        isFree: \"\",\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n      },\r\n      classID: this.$store.state.classID ? this.$store.state.classID : -1,\r\n    };\r\n  },\r\n  watch: {\r\n    getclassID(newVal, oldVal) {\r\n      if (newVal != oldVal) {\r\n        this.queryParams.styleId = newVal;\r\n        this.activeCondition(\"styles\", this.queryParams.styleId);\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    getclassID() {\r\n      return this.$store.state.classID;\r\n    },\r\n  },\r\n  created() {},\r\n\r\n  async mounted() {\r\n    this.getClassPage();\r\n    let list = await this.getClassify();\r\n    this.queryParams.styleId = this.classID;\r\n    if (this.queryParams.styleId != -1) {\r\n      this.activeCondition(\"styles\", this.queryParams.styleId, list);\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    //获取分类列表\r\n    getClassify() {\r\n      return new Promise((resolve, reject) => {\r\n        getClassify().then((result) => {\r\n          let arr = { id: -1, name: \"全部\" };\r\n          let a = result.data;\r\n          let i = 0;\r\n          for (const key in a) {\r\n            if (key != \"orders\") {\r\n              a[key].unshift(arr);\r\n            }\r\n            this.classifys.push({ classifysId: i++, type: key, list: a[key] });\r\n          }\r\n\r\n          this.classifys.forEach((ele) => {\r\n            if (ele.type == \"orders\") {\r\n              ele.classifysId = 4;\r\n            }\r\n            if (ele.type == \"prices\") {\r\n              ele.classifysId = 3;\r\n            }\r\n          });\r\n          resolve(this.classifys);\r\n        });\r\n      });\r\n    },\r\n    //点击切换条件\r\n    activeCondition(type, id, list, event) {\r\n      let active = document.querySelectorAll(\r\n        `.${type}>.classify-top-list-item`\r\n      );\r\n      active.forEach((v) => {\r\n        v.classList.remove(\"active\");\r\n      });\r\n      if (event) {\r\n        event.srcElement.classList.add(\"active\");\r\n      }\r\n      if (list) {\r\n        list[0].list.forEach((ele, i) => {\r\n          if (ele.id == id) {\r\n            active[i + 1].classList.add(\"active\");\r\n            return (this.xuan[type] = id);\r\n          }\r\n        });\r\n      }\r\n      if (this.classifys[0]) {\r\n        this.classifys[0].list.forEach((ele, i) => {\r\n          if (ele.id == id) {\r\n            active[i + 1].classList.add(\"active\");\r\n            return (this.xuan[type] = id);\r\n          }\r\n        });\r\n      }\r\n      if (type) {\r\n        this.xuan[`${type}`] = id;\r\n        this.queryParams.styleId = this.xuan.styles;\r\n        this.queryParams.areaId = this.xuan.areas;\r\n        this.queryParams.isFinish = this.xuan.status;\r\n        this.queryParams.isFree = this.xuan.prices;\r\n        this.queryParams.order = this.xuan.orders;\r\n        this.getClassPage(\r\n          this.xuan.styles,\r\n          this.xuan.areas,\r\n          this.xuan.status,\r\n          this.xuan.prices,\r\n          this.xuan.orders\r\n        );\r\n      }\r\n    },\r\n    //分类筛选结果列表\r\n    getClassPage(styleId, areaId, isFinish, isFree, order) {\r\n      this.classifyResult = [];\r\n      ClassPage(this.queryParams).then((res) => {\r\n        this.classifyResult = res.data;\r\n      });\r\n    },\r\n    //传递漫画的id\r\n    getId(comicId) {\r\n      this.$router.push({ name: \"cartoondetail\", params: { comicId } });\r\n    },\r\n    /** 更多加载 */\r\n    jiazai() {\r\n      this.pageSize += 37;\r\n      this.getClassPage(\r\n        this.xuan.styles,\r\n        this.xuan.areas,\r\n        this.xuan.status,\r\n        this.xuan.prices,\r\n        this.xuan.orders\r\n      );\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.classify {\r\n  .classify-top {\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    margin-bottom: 30px;\r\n\r\n    .classify-top-list {\r\n      display: flex;\r\n      margin-bottom: 20px;\r\n\r\n      .classify-top-list-item {\r\n        cursor: pointer;\r\n        margin-right: 20px;\r\n        &:hover {\r\n          color: #32aaff;\r\n        }\r\n      }\r\n\r\n      .a1 {\r\n        color: rgb(184, 187, 187);\r\n        cursor: default;\r\n        &:hover {\r\n          color: rgb(184, 187, 187);\r\n          cursor: default;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .classify-result {\r\n    width: 80%;\r\n    margin: 0 auto;\r\n\r\n    .classify-result-list {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n\r\n      .classify-result-list-item {\r\n        width: 19%;\r\n        margin-right: 1.25%;\r\n        margin-bottom: 30px;\r\n        &:nth-child(5n) {\r\n          margin-right: 0;\r\n        }\r\n        .classify-result-list-item-img {\r\n          width: 100%;\r\n\r\n          img {\r\n            width: 100%;\r\n          }\r\n        }\r\n\r\n        .text {\r\n          display: -webkit-box;\r\n          -webkit-line-clamp: 1;\r\n          -webkit-box-orient: vertical;\r\n          overflow: hidden;\r\n          margin-bottom: 5px;\r\n        }\r\n\r\n        .ord {\r\n          font-size: 15px;\r\n          color: rgba(0, 0, 0, 0.34);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .empty {\r\n    width: 1000px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n\r\n    .el-empty {\r\n      .el-empty__image {\r\n        width: 500px;\r\n      }\r\n\r\n      /deep/p {\r\n        font-size: 20px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .btn {\r\n    text-align: center;\r\n  }\r\n}\r\n\r\n.active {\r\n  color: #32aaff;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Classify.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Classify.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Classify.vue?vue&type=template&id=34c71d4a&scoped=true&\"\nimport script from \"./Classify.vue?vue&type=script&lang=js&\"\nexport * from \"./Classify.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Classify.vue?vue&type=style&index=0&id=34c71d4a&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"34c71d4a\",\n  null\n  \n)\n\nexport default component.exports","export default {\r\n  '401': '认证失败，无法访问系统资源',\r\n  '403': '当前操作没有权限',\r\n  '404': '访问资源不存在',\r\n  'default': '系统未知错误，请反馈给管理员'\r\n}\r\n","import axios from 'axios';\r\nimport { Notification, MessageBox, Message, Loading } from 'element-ui';\r\nimport errorCode from '@/utils/errorCode'\r\nimport { tansParams, blobValidate } from \"@/utils/slms\";\r\n// import { tokenUrl } from \"@/tokenUrl/tokenUrl.js\";\r\n// import store from \"@/store\";\r\n\r\n// // 是否显示重新登录\r\nexport let isRelogin = { show: false };\r\n\r\naxios.defaults.headers['Content-Type'] = 'application/json;charset=utf-8'\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  // axios中请求配置有baseURL选项，表示请求URL公共部分\r\n  baseURL: '/apis',\r\n\r\n  // 超时\r\n  timeout: 10000\r\n})\r\n\r\n// 正在进行中的请求列表\r\nlet reqList = []\r\n\r\n/**\r\n * 阻止重复请求\r\n * @param {array} reqList - 请求缓存列表\r\n * @param {string} url - 当前请求地址\r\n * @param {function} cancel - 请求中断函数\r\n * @param {string} errorMessage - 请求中断时需要显示的错误信息\r\n */\r\nconst stopRepeatRequest = function (reqList, url, cancel, errorMessage) {\r\n  const errorMsg = errorMessage || ''\r\n  for (let i = 0; i < reqList.length; i++) {\r\n    if (reqList[i] === url) {\r\n      cancel(errorMsg)\r\n      return\r\n    }\r\n  }\r\n  reqList.push(url);\r\n}\r\n\r\n/**\r\n * 允许某个请求可以继续进行\r\n * @param {array} reqList 全部请求列表\r\n * @param {string} url 请求地址\r\n */\r\nconst allowRequest = function (reqList, url) {\r\n  for (let i = 0; i < reqList.length; i++) {\r\n    if (reqList[i] === url) {\r\n      reqList.splice(i, 1)\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// request拦截器\r\nservice.interceptors.request.use(config => {\r\n  // 是否需要设置 token\r\n  // const isToken = (config.headers || {}).isToken === false\r\n  // 是否需要防止数据重复提交\r\n  const isRepeatSubmit = (config.headers || {}).repeatSubmit === false;\r\n\r\n  // if (tokenUrl.indexOf(config.url) > -1) {\r\n  //   //获取cookie\r\n  //   let token = Vue.$cookies.get(\"token\");\r\n\r\n  //   //将token挂在到请求头中\r\n  //   config.headers.token = token;\r\n  // }\r\n  // if (getToken() && !isToken) {\r\n  //   config.headers['Authorization'] = 'Bearer ' + getToken() // 让每个请求携带自定义token 请根据实际情况自行修改\r\n  // }\r\n  // get请求映射params参数\r\n  if (config.method === 'get' && config.params) {\r\n    let url = config.url + '?' + tansParams(config.params);\r\n    url = url.slice(0, -1);\r\n    config.params = {};\r\n    config.url = url;\r\n  }\r\n\r\n\r\n  // /**\r\n  //  * 阻止重复请求。当上个请求未完成时，相同的请求不会进行\r\n  //  */\r\n  // let cancel;\r\n  // // 设置cancelToken对象\r\n  // config.cancelToken = new axios.CancelToken(function (c) {\r\n  //   cancel = c\r\n  // })\r\n  // // 阻止重复请求。当上个请求未完成时，相同的请求不会进行\r\n  // stopRepeatRequest(reqList, config.url, cancel, `${config.url} 请求被中断`);\r\n\r\n  // removereqQueue(config); // 检查是否重复发送请求\r\n  // addreqQueue(config); //将本次请求加入请求队列\r\n\r\n  return config\r\n}, error => {\r\n  Promise.reject(error)\r\n})\r\n// const interval = 1000;      // 请求间隔时间(ms)，小于此时间视为重复提交\r\n// service.interceptors.response.use(\r\n//   (res) => {\r\n//     // 增加延迟，相同请求不得在短时间内重复发送\r\n//     setTimeout(() => {\r\n//       allowRequest(reqList, res.config.url)\r\n//     }, interval)\r\n//     // ...请求成功后的后续操作\r\n//     // successHandler(response)\r\n//     return res\r\n//   },\r\n//   (error) => {\r\n//     if (axios.isCancel(thrown)) {\r\n//       console.log(thrown.message);\r\n//     } else {\r\n//       // 增加延迟，相同请求不得在短时间内重复发送\r\n//       setTimeout(() => {\r\n//         allowRequest(reqList, error.config.url)\r\n//       }, interval)\r\n//     }\r\n//   }\r\n// )\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(res => {\r\n  // 未设置状态码则默认成功状态\r\n  const code = res.data.code || 200;\r\n  // 获取错误信息\r\n  const msg = errorCode[code] || res.data.msg || errorCode['default']\r\n  // 二进制数据则直接返回\r\n  if (res.request.responseType === 'blob' || res.request.responseType === 'arraybuffer') {\r\n    return res.data  //返回调用接口后获取的数据里data里数据\r\n    // return res //返回调用接口后获取的数据\r\n  }\r\n  if (code === 500) {\r\n    Message({\r\n      message: msg,\r\n      type: 'error'\r\n    })\r\n    return Promise.reject(new Error(msg))\r\n  } else if (code !== 200) {\r\n    Notification.error({\r\n      title: msg\r\n    })\r\n    return Promise.reject('error')\r\n  } else {\r\n    return res.data\r\n  }\r\n},\r\n  error => {\r\n    console.log('err' + error)\r\n    let { message } = error;\r\n    if (message == \"Network Error\") {\r\n      message = \"后端接口连接异常\";\r\n    }\r\n    else if (message.includes(\"timeout\")) {\r\n      message = \"系统接口请求超时\";\r\n    }\r\n    else if (message.includes(\"Request failed with status code\")) {\r\n      message = \"系统接口\" + message.substr(message.length - 3) + \"异常\";\r\n    }\r\n    Message({\r\n      message: message,\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n\r\n\r\n// 通用下载方法\r\nexport function download(url, params, filename) {\r\n  downloadLoadingInstance = Loading.service({ text: \"正在下载数据，请稍候\", spinner: \"el-icon-loading\", background: \"rgba(0, 0, 0, 0.7)\", })\r\n  return service.post(url, params, {\r\n    transformRequest: [(params) => { return tansParams(params) }],\r\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n    responseType: 'blob',\r\n    timeout: 3 * 60 * 1000,\r\n  }).then(async (data) => {\r\n    const isLogin = await blobValidate(data);\r\n    if (isLogin) {\r\n      const blob = new Blob([data])\r\n      saveAs(blob, filename)\r\n    } else {\r\n      const resText = await data.text();\r\n      const rspObj = JSON.parse(resText);\r\n      const errMsg = errorCode[rspObj.code] || rspObj.msg || errorCode['default']\r\n      Message.error(errMsg);\r\n    }\r\n    downloadLoadingInstance.close();\r\n  }).catch((r) => {\r\n    console.error(r)\r\n    Message.error('下载文件出现错误，请联系管理员！')\r\n    downloadLoadingInstance.close();\r\n  })\r\n}\r\n\r\nexport default service\r\n","import request from '@/https/http.js';\r\n//首页 获取轮播图\r\nexport function getBanner(query) {\r\n  return request({\r\n    url: '/Banner',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n\r\n//首页 获取分类列表\r\nexport function getClassify(query) {\r\n  return request({\r\n    url: '/AllLabel',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n//首页 获取为你推荐列表\r\nexport function getCommend(query) {\r\n  return request({\r\n    url: '/HomeRecommend',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n//首页 热门速递列表\r\nexport function getHotlist(query) {\r\n  return request({\r\n    url: '/GetClassPageSixComics',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n\r\n//漫画搜索\r\nexport function comicSearch(query) {\r\n  return request({\r\n    url: '/Search',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n//漫画分类列表\r\nexport function ClassPage(query) {\r\n  return request({\r\n    url: '/ClassPage',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n\r\n//漫画详情\r\nexport function getComicDetail(query) {\r\n  return request({\r\n    url: '/ComicDetail',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n//漫画更多推荐列表\r\nexport function getRecomm(query) {\r\n  return request({\r\n    url: '/MoreRecommend',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n//漫画评论\r\nexport function getReplyMain(query) {\r\n  return request({\r\n    url: '/ReplyMain',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n\r\n//获取排行榜\r\nexport function getRankInfo(query) {\r\n  return request({\r\n    url: '/GetRankInfo',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n//漫画获取图片地址列表\r\nexport function getImageIndex(query) {\r\n  return request({\r\n    url: '/GetImageIndex',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n//漫画图片\r\nexport function getImageToken(query) {\r\n  return request({\r\n    url: '/ImageToken',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n\r\n\r\n// export function addBinding(data) {\r\n//   return request({\r\n//     url: '/carrier/binding',\r\n//     method: 'post',\r\n//     data: data,\r\n//   });\r\n// }\r\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_l","items","index","key","class","type","_v","_s","item","i","active","on","$event","activeCondition","id","name","attrs","classifyResult","length","_e","directives","rawName","value","total","expression","queryParams","pageNum","pageSize","$set","getClassPage","staticRenderFns","data","classifys","xuan","classifyslist","styleId","areaId","isFinish","order","isFree","classID","$store","state","watch","getclassID","newVal","oldVal","computed","created","mounted","list","getClassify","methods","Promise","resolve","reject","then","arr","a","result","unshift","push","classifysId","forEach","ele","event","document","querySelectorAll","v","classList","remove","srcElement","add","styles","areas","status","prices","orders","ClassPage","res","getId","comicId","$router","params","jiazai","component","axios","headers","service","baseURL","timeout","interceptors","request","use","config","repeatSubmit","method","url","tansParams","slice","error","response","code","msg","errorCode","responseType","Message","message","Error","Notification","title","console","log","includes","substr","duration","getBanner","query","getCommend","getHotlist","comicSearch","getComicDetail","getRecomm","getReplyMain","getRankInfo","getImageIndex","getImageToken"],"sourceRoot":""}