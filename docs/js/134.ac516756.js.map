{"version":3,"file":"js/134.ac516756.js","mappings":"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","sources":["webpack://manhua/./src/views/RankingList.vue?aaba","webpack://manhua/src/views/RankingList.vue","webpack://manhua/./src/views/RankingList.vue?b330","webpack://manhua/./src/views/RankingList.vue","webpack://manhua/./src/utils/errorCode.js","webpack://manhua/./src/https/http.js","webpack://manhua/./src/api/comics.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"rankinglist\"},[_c('div',{staticClass:\"tablist\"},[_c('div',{staticClass:\"tablist-lt\"},[_c('div',{staticClass:\"lt-list\"},_vm._l((_vm.tablist),function(item,i){return _c('div',{key:i,staticClass:\"list-item\",class:_vm.activeIndex === i ? 'active' : '',on:{\"click\":function($event){return _vm.active(i, item.id)}}},[_vm._v(\" \"+_vm._s(item.name)+\" \")])}),0)]),_c('div',{staticClass:\"tablist-rt\"},[_c('h2',[_vm._v(\" \"+_vm._s(_vm.tablist[_vm.activeIndex].name)+\" \"),_c('span',[_vm._v(_vm._s(_vm.tablist[_vm.activeIndex].description))])]),_c('div',{staticClass:\"rt-list\"},_vm._l((_vm.comiclist),function(item,i){return _c('div',{key:i,staticClass:\"rt-list-item\",on:{\"click\":function($event){return _vm.getId(item.comic_id)}}},[_c('div',{staticClass:\"rt-list-item-img\"},[_c('img',{attrs:{\"src\":item.vertical_cover,\"alt\":\"\"}})]),_c('div',{staticClass:\"text\"},[_vm._v(_vm._s(item.title))]),_vm._l((item.styles),function(items,index){return _c('div',{key:index,staticClass:\"type\"},[_vm._v(\" \"+_vm._s(items.name)+\" \")])})],2)}),0)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"rankinglist\">\r\n    <div class=\"tablist\">\r\n      <div class=\"tablist-lt\">\r\n        <div class=\"lt-list\">\r\n          <div\r\n            class=\"list-item\"\r\n            v-for=\"(item, i) in tablist\"\r\n            :key=\"i\"\r\n            :class=\"activeIndex === i ? 'active' : ''\"\r\n            @click=\"active(i, item.id)\"\r\n          >\r\n            {{ item.name }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"tablist-rt\">\r\n        <h2>\r\n          {{ tablist[activeIndex].name }}\r\n          <span>{{ tablist[activeIndex].description }}</span>\r\n        </h2>\r\n        <div class=\"rt-list\">\r\n          <div\r\n            class=\"rt-list-item\"\r\n            v-for=\"(item, i) in comiclist\"\r\n            :key=\"i\"\r\n            @click=\"getId(item.comic_id)\"\r\n          >\r\n            <div class=\"rt-list-item-img\">\r\n              <img :src=\"item.vertical_cover\" alt=\"\" />\r\n            </div>\r\n            <div class=\"text\">{{ item.title }}</div>\r\n            <div\r\n              class=\"type\"\r\n              v-for=\"(items, index) in item.styles\"\r\n              :key=\"index\"\r\n            >\r\n              {{ items.name }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { getRankInfo } from \"@/api/comics\";\r\nexport default {\r\n  name: \"rankinglist\",\r\n  data() {\r\n    return {\r\n      activeIndex: 0,\r\n      tablist: [\r\n        {\r\n          id: 7,\r\n          type: 0,\r\n          description: \"前7日综合指标最高的三个月内上线漫画作品排行\",\r\n          name: \"新作榜\",\r\n        },\r\n        {\r\n          id: 11,\r\n          type: 0,\r\n          description: \"前7日综合指标最高的男性向漫画作品排行\",\r\n          name: \"男生榜\",\r\n        },\r\n        {\r\n          id: 12,\r\n          type: 0,\r\n          description: \"前7日综合指标最高的女性向漫画作品排行\",\r\n          name: \"女生榜\",\r\n        },\r\n        {\r\n          id: 1,\r\n          type: 0,\r\n          description: \"前7日人气最高的国漫作品排行，每日更新\",\r\n          name: \"国漫榜\",\r\n        },\r\n        {\r\n          id: 0,\r\n          type: 0,\r\n          description: \"前7日人气最高的日漫作品排行，每日更新\",\r\n          name: \"日漫榜\",\r\n        },\r\n        {\r\n          id: 2,\r\n          type: 0,\r\n          description: \"前7日人气最高的韩漫作品排行，每日更新\",\r\n          name: \"韩漫榜\",\r\n        },\r\n        {\r\n          id: 5,\r\n          type: 0,\r\n          description: \"前7日人气最高的官方精选漫画作品排行，每日更新\",\r\n          name: \"宝藏榜\",\r\n        },\r\n        {\r\n          id: 8,\r\n          type: 0,\r\n          description: \"前7日人气最高的免费漫画作品排行，每日更新\",\r\n          name: \"免费榜\",\r\n        },\r\n        {\r\n          id: 13,\r\n          type: 2,\r\n          description: \"前365日综合指标最高的完结漫画作品排行\",\r\n          name: \"完结榜\",\r\n        },\r\n      ],\r\n      comiclist: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.get(this.tablist[0].id);\r\n  },\r\n  methods: {\r\n    active(i, id) {\r\n      this.activeIndex = i;\r\n      this.get(id);\r\n    },\r\n    //获取排行榜\r\n    get(id) {\r\n      let params = {\r\n        id,\r\n        pageNum: 2,\r\n      };\r\n      getRankInfo(params).then((result) => {\r\n          console.log(\"result==>\", result);\r\n          this.comiclist = result.data.list;\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err==>\", err);\r\n        });\r\n    },\r\n    //传递漫画的id\r\n    getId(comicId) {\r\n      // console.log(\"comicId ==> \", comicId);\r\n      this.$router.push({ name: \"cartoondetail\", params: { comicId } });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.rankinglist {\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  .tablist {\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    .tablist-lt {\r\n      width: 18.75%;\r\n      // width: 300px;\r\n      height: 610px;\r\n      // padding-right: 50px;\r\n      border-right: 1px solid #000;\r\n      .lt-list {\r\n        width: 100px;\r\n        .list-item {\r\n          height: 50px;\r\n          line-height: 50px;\r\n          margin-bottom: 20px;\r\n        }\r\n      }\r\n      .active {\r\n        color: #32aaff;\r\n      }\r\n    }\r\n    .tablist-rt {\r\n      // width: 81.25%;\r\n      padding-left: 30px;\r\n      h2 {\r\n        margin-bottom: 50px;\r\n        span {\r\n          font-size: 20px;\r\n          color: rgb(174, 170, 170);\r\n        }\r\n      }\r\n      .rt-list {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        .rt-list-item {\r\n          width: 19%;\r\n          margin-right: 1.25%;\r\n          // width: 250px;\r\n          // margin-right: 20px;\r\n          margin-bottom: 20px;\r\n          &:nth-child(5n) {\r\n            margin-right: 0;\r\n          }\r\n          .rt-list-item-img {\r\n            width: 100%;\r\n          }\r\n          .text {\r\n            .text_overflow;\r\n            margin-bottom: 10px;\r\n          }\r\n          .type {\r\n            font-size: 16px;\r\n            color: rgba(0, 0, 0, 0.7);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./RankingList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./RankingList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RankingList.vue?vue&type=template&id=208feead&scoped=true&\"\nimport script from \"./RankingList.vue?vue&type=script&lang=js&\"\nexport * from \"./RankingList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./RankingList.vue?vue&type=style&index=0&id=208feead&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"208feead\",\n  null\n  \n)\n\nexport default component.exports","export default {\r\n  '401': '认证失败，无法访问系统资源',\r\n  '403': '当前操作没有权限',\r\n  '404': '访问资源不存在',\r\n  'default': '系统未知错误，请反馈给管理员'\r\n}\r\n","import axios from 'axios';\r\nimport { Notification, MessageBox, Message, Loading } from 'element-ui';\r\nimport errorCode from '@/utils/errorCode'\r\nimport { tansParams, blobValidate } from \"@/utils/slms\";\r\n// import { tokenUrl } from \"@/tokenUrl/tokenUrl.js\";\r\n// import store from \"@/store\";\r\n\r\n// // 是否显示重新登录\r\nexport let isRelogin = { show: false };\r\n\r\naxios.defaults.headers['Content-Type'] = 'application/json;charset=utf-8'\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  // axios中请求配置有baseURL选项，表示请求URL公共部分\r\n  baseURL: '/apis',\r\n\r\n  // 超时\r\n  timeout: 10000\r\n})\r\n\r\n// 正在进行中的请求列表\r\nlet reqList = []\r\n\r\n/**\r\n * 阻止重复请求\r\n * @param {array} reqList - 请求缓存列表\r\n * @param {string} url - 当前请求地址\r\n * @param {function} cancel - 请求中断函数\r\n * @param {string} errorMessage - 请求中断时需要显示的错误信息\r\n */\r\nconst stopRepeatRequest = function (reqList, url, cancel, errorMessage) {\r\n  const errorMsg = errorMessage || ''\r\n  for (let i = 0; i < reqList.length; i++) {\r\n    if (reqList[i] === url) {\r\n      cancel(errorMsg)\r\n      return\r\n    }\r\n  }\r\n  reqList.push(url);\r\n}\r\n\r\n/**\r\n * 允许某个请求可以继续进行\r\n * @param {array} reqList 全部请求列表\r\n * @param {string} url 请求地址\r\n */\r\nconst allowRequest = function (reqList, url) {\r\n  for (let i = 0; i < reqList.length; i++) {\r\n    if (reqList[i] === url) {\r\n      reqList.splice(i, 1)\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// request拦截器\r\nservice.interceptors.request.use(config => {\r\n  // 是否需要设置 token\r\n  // const isToken = (config.headers || {}).isToken === false\r\n  // 是否需要防止数据重复提交\r\n  const isRepeatSubmit = (config.headers || {}).repeatSubmit === false;\r\n\r\n  // if (tokenUrl.indexOf(config.url) > -1) {\r\n  //   //获取cookie\r\n  //   let token = Vue.$cookies.get(\"token\");\r\n\r\n  //   //将token挂在到请求头中\r\n  //   config.headers.token = token;\r\n  // }\r\n  // if (getToken() && !isToken) {\r\n  //   config.headers['Authorization'] = 'Bearer ' + getToken() // 让每个请求携带自定义token 请根据实际情况自行修改\r\n  // }\r\n  // get请求映射params参数\r\n  if (config.method === 'get' && config.params) {\r\n    let url = config.url + '?' + tansParams(config.params);\r\n    url = url.slice(0, -1);\r\n    config.params = {};\r\n    config.url = url;\r\n  }\r\n\r\n\r\n  // /**\r\n  //  * 阻止重复请求。当上个请求未完成时，相同的请求不会进行\r\n  //  */\r\n  // let cancel;\r\n  // // 设置cancelToken对象\r\n  // config.cancelToken = new axios.CancelToken(function (c) {\r\n  //   cancel = c\r\n  // })\r\n  // // 阻止重复请求。当上个请求未完成时，相同的请求不会进行\r\n  // stopRepeatRequest(reqList, config.url, cancel, `${config.url} 请求被中断`);\r\n\r\n  // removereqQueue(config); // 检查是否重复发送请求\r\n  // addreqQueue(config); //将本次请求加入请求队列\r\n\r\n  return config\r\n}, error => {\r\n  Promise.reject(error)\r\n})\r\n// const interval = 1000;      // 请求间隔时间(ms)，小于此时间视为重复提交\r\n// service.interceptors.response.use(\r\n//   (res) => {\r\n//     // 增加延迟，相同请求不得在短时间内重复发送\r\n//     setTimeout(() => {\r\n//       allowRequest(reqList, res.config.url)\r\n//     }, interval)\r\n//     // ...请求成功后的后续操作\r\n//     // successHandler(response)\r\n//     return res\r\n//   },\r\n//   (error) => {\r\n//     if (axios.isCancel(thrown)) {\r\n//       console.log(thrown.message);\r\n//     } else {\r\n//       // 增加延迟，相同请求不得在短时间内重复发送\r\n//       setTimeout(() => {\r\n//         allowRequest(reqList, error.config.url)\r\n//       }, interval)\r\n//     }\r\n//   }\r\n// )\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(res => {\r\n  // 未设置状态码则默认成功状态\r\n  const code = res.data.code || 200;\r\n  // 获取错误信息\r\n  const msg = errorCode[code] || res.data.msg || errorCode['default']\r\n  // 二进制数据则直接返回\r\n  if (res.request.responseType === 'blob' || res.request.responseType === 'arraybuffer') {\r\n    return res.data  //返回调用接口后获取的数据里data里数据\r\n    // return res //返回调用接口后获取的数据\r\n  }\r\n  if (code === 500) {\r\n    Message({\r\n      message: msg,\r\n      type: 'error'\r\n    })\r\n    return Promise.reject(new Error(msg))\r\n  } else if (code !== 200) {\r\n    Notification.error({\r\n      title: msg\r\n    })\r\n    return Promise.reject('error')\r\n  } else {\r\n    return res.data\r\n  }\r\n},\r\n  error => {\r\n    console.log('err' + error)\r\n    let { message } = error;\r\n    if (message == \"Network Error\") {\r\n      message = \"后端接口连接异常\";\r\n    }\r\n    else if (message.includes(\"timeout\")) {\r\n      message = \"系统接口请求超时\";\r\n    }\r\n    else if (message.includes(\"Request failed with status code\")) {\r\n      message = \"系统接口\" + message.substr(message.length - 3) + \"异常\";\r\n    }\r\n    Message({\r\n      message: message,\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n\r\n\r\n// 通用下载方法\r\nexport function download(url, params, filename) {\r\n  downloadLoadingInstance = Loading.service({ text: \"正在下载数据，请稍候\", spinner: \"el-icon-loading\", background: \"rgba(0, 0, 0, 0.7)\", })\r\n  return service.post(url, params, {\r\n    transformRequest: [(params) => { return tansParams(params) }],\r\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n    responseType: 'blob',\r\n    timeout: 3 * 60 * 1000,\r\n  }).then(async (data) => {\r\n    const isLogin = await blobValidate(data);\r\n    if (isLogin) {\r\n      const blob = new Blob([data])\r\n      saveAs(blob, filename)\r\n    } else {\r\n      const resText = await data.text();\r\n      const rspObj = JSON.parse(resText);\r\n      const errMsg = errorCode[rspObj.code] || rspObj.msg || errorCode['default']\r\n      Message.error(errMsg);\r\n    }\r\n    downloadLoadingInstance.close();\r\n  }).catch((r) => {\r\n    console.error(r)\r\n    Message.error('下载文件出现错误，请联系管理员！')\r\n    downloadLoadingInstance.close();\r\n  })\r\n}\r\n\r\nexport default service\r\n","import request from '@/https/http.js';\r\n//首页 获取轮播图\r\nexport function getBanner(query) {\r\n  return request({\r\n    url: '/Banner',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n\r\n//首页 获取分类列表\r\nexport function getClassify(query) {\r\n  return request({\r\n    url: '/AllLabel',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n//首页 获取为你推荐列表\r\nexport function getCommend(query) {\r\n  return request({\r\n    url: '/HomeRecommend',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n//首页 热门速递列表\r\nexport function getHotlist(query) {\r\n  return request({\r\n    url: '/GetClassPageSixComics',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n\r\n//漫画搜索\r\nexport function comicSearch(query) {\r\n  return request({\r\n    url: '/Search',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n//漫画分类列表\r\nexport function ClassPage(query) {\r\n  return request({\r\n    url: '/ClassPage',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n\r\n//漫画详情\r\nexport function getComicDetail(query) {\r\n  return request({\r\n    url: '/ComicDetail',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n//漫画更多推荐列表\r\nexport function getRecomm(query) {\r\n  return request({\r\n    url: '/MoreRecommend',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n//漫画评论\r\nexport function getReplyMain(query) {\r\n  return request({\r\n    url: '/ReplyMain',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n\r\n//获取排行榜\r\nexport function getRankInfo(query) {\r\n  return request({\r\n    url: '/GetRankInfo',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n//漫画获取图片地址列表\r\nexport function getImageIndex(query) {\r\n  return request({\r\n    url: '/GetImageIndex',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n//漫画图片\r\nexport function getImageToken(query) {\r\n  return request({\r\n    url: '/ImageToken',\r\n    method: 'get',\r\n    params: query,\r\n  });\r\n}\r\n\r\n\r\n// export function addBinding(data) {\r\n//   return request({\r\n//     url: '/carrier/binding',\r\n//     method: 'post',\r\n//     data: data,\r\n//   });\r\n// }\r\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_l","item","i","key","class","activeIndex","on","$event","active","id","_v","_s","name","tablist","description","getId","comic_id","attrs","vertical_cover","title","items","index","staticRenderFns","data","type","comiclist","created","get","methods","params","pageNum","getRankInfo","then","console","catch","err","comicId","$router","push","component","axios","headers","service","baseURL","timeout","interceptors","request","use","config","repeatSubmit","method","url","tansParams","slice","error","Promise","reject","response","res","code","msg","errorCode","responseType","Message","message","Error","Notification","log","includes","substr","length","duration","getBanner","query","getClassify","getCommend","getHotlist","comicSearch","ClassPage","getComicDetail","getRecomm","getReplyMain","getImageIndex","getImageToken"],"sourceRoot":""}